#include <stdio.h>
#include <math.h>
#include <string.h>
#define N 100010
#define alpha 0.85
struct edge
{
	int v;
	int next;
	double num;
}e[10*N];
int head[N],cnt;
double p[N],val,pnext[N],delta;
void addedge(int u,int v,double s)
{
	e[++cnt].v=v;
	e[cnt].next=head[u];
	e[cnt].num=s;
	head[u]=cnt;
}
int main()
{
	freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);
	int i,j,n;
	memset(head,-1,sizeof(head));
	scanf("%d",&n);
	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
		{
			scanf("%lf",&val);
			if(val>0.0001)addedge(i,j,val);
		}
	for(i=1;i<=n;i++) 
		scanf("%lf",&p[i]);
	cnt=0;
	while(cnt<1000)
	{
		++cnt;
		for(i=1;i<=n;i++)
		{
			pnext[i]=(1.0/n)*alpha;
			for(j=head[i];j!=-1;j=e[j].next)
				pnext[i]+=alpha*e[j].num*p[e[j].v];
		}
		delta=0;
		for(i=1;i<=n;i++)
			delta+=pnext[i];
		for(i=1;i<=n;i++)
		    pnext[i]=(1/delta)*pnext[i];
		delta=0;
		for(i=1;i<=n;i++)
			delta+=(p[i]-pnext[i])*(p[i]-pnext[i]);
		if(delta<0.000001)break;
		for(i=1;i<=n;i++)
			p[i]=pnext[i];
	}
	printf("%d %lf\n",cnt,delta);
	for(i=1;i<=n;i++)
		printf("%lf\n",p[i]);
	return 0;
}
